@startuml component-dependencies-simple
title Chat API Component Dependencies - Simplified

skinparam packageStyle rectangle
skinparam componentStyle rectangle
skinparam backgroundColor #FEFEFE
skinparam ArrowThickness 2
skinparam roundcorner 10

' Entry Points
package "Entry Points" #E8E8E8 {
    [__main__.py] as main
    [aws.py] as aws
}

' API Layer
package "API Layer" #B3D9FF {
    [api.py] as api
    [middleware.py] as middleware
}

' Service Layer
package "Service Layer" #C8E6C9 {
    [chat.py] as chat
}

' Provider Layer
package "Providers" #FFE0B2 {
    [providers.py] as providers
    [retry.py] as retry
    interface LLMProvider
}

' Storage Layer
package "Storage" #FFCDD2 {
    [storage.py] as storage
    interface Repository
    interface Cache
}

' Shared
package "Shared" #F5F5F5 {
    [config.py] as config
    [exceptions.py] as exceptions
    [types.py] as types
}

' Dependencies
main --> api
aws --> api

api --> chat
api --> middleware
api --> providers
api --> storage
api --> config

chat ..> LLMProvider : uses
chat ..> Repository : uses
chat ..> Cache : uses
chat --> exceptions
chat --> types

providers ..|> LLMProvider : implements
providers --> retry
providers --> exceptions
providers --> types

storage ..|> Repository : implements
storage ..|> Cache : implements
storage --> exceptions
storage --> types

note right of chat : Dependency Injection:\nReceives protocol implementations\nat runtime

note top of api : Wires up all\ndependencies

@enduml
