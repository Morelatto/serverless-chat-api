name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options: [dev, staging, prod]
        default: dev

jobs:
  deploy-dev:
    if: github.event_name == 'push' || github.event.inputs.environment == 'dev'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install and test
        run: |
          pip install -e ".[dev,test]"
          ruff check src/
          pytest tests/ --cov=src --cov-fail-under=70
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        working-directory: iac/terraform
        run: |
          zip -r lambda_function.zip ../../src/ -x "**/__pycache__/*"
          terraform init
          terraform apply -auto-approve
          echo "url=$(terraform output -raw api_endpoint 2>/dev/null || echo 'http://localhost:8000')" >> $GITHUB_OUTPUT
        id: deploy
      - name: Health check
        run: |
          URL="${{ steps.deploy.outputs.url }}"
          if [ -n "$URL" ] && [ "$URL" != "http://localhost:8000" ]; then
            curl -f "$URL/v1/health" || echo "Health check failed but continuing"
          else
            echo "Skipping health check - no valid URL"
          fi

  deploy-staging:
    if: github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - run: echo "Staging deployment not configured yet"

  deploy-prod:
    if: github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v4
      - run: echo "Production deployment not configured yet"