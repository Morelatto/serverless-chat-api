name: Cleanup AWS Resources

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "destroy" to confirm resource deletion'
        required: true
        type: string

jobs:
  cleanup:
    if: github.event.inputs.confirm == 'destroy'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.0'
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Destroy Terraform Resources
        working-directory: iac/terraform
        run: |
          # Create dummy layer directory to avoid errors
          mkdir -p layer/python
          touch layer/python/.keep
          
          terraform init -reconfigure
          
          # Create minimal tfvars for destroy
          cat > terraform.tfvars.destroy <<EOF
          environment = "dev"
          gemini_api_key = "dummy"
          openrouter_api_key = "dummy"
          EOF
          
          # Import existing resources first
          echo "Importing existing resources before destruction..."
          terraform import -var-file="terraform.tfvars.destroy" aws_iam_role.lambda serverless-chat-api-lambda-dev 2>/dev/null || true
          terraform import -var-file="terraform.tfvars.destroy" aws_dynamodb_table.main serverless-chat-api-dev 2>/dev/null || true
          terraform import -var-file="terraform.tfvars.destroy" aws_lambda_function.api serverless-chat-api-dev 2>/dev/null || true
          terraform import -var-file="terraform.tfvars.destroy" aws_lambda_function_url.api serverless-chat-api-dev 2>/dev/null || true
          terraform import -var-file="terraform.tfvars.destroy" aws_cloudwatch_log_group.lambda /aws/lambda/serverless-chat-api-dev 2>/dev/null || true
          
          # Destroy all resources
          terraform destroy -var-file="terraform.tfvars.destroy" -auto-approve